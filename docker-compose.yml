services:
  db:
    image: postgres:15
    container_name: booking_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - 5432:5432

  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: ["/booking/docker/app.sh"]
    ports:
      - 9000:8000

  celery:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery
    env_file:
      - .env-non-dev
    command: sh -c "celery -A tasks.celery_app:celery worker -l INFO"
    depends_on:
      - redis

  celery_beat:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery_beat
    env_file:
      - .env-non-dev
    command: sh -c "celery -A tasks.celery_app:celery worker -l INFO -B"
    depends_on:
      - redis

  flower:
    image: booking_flower
    build:
      context: .
    container_name: booking_flower
    env_file:
      - .env-non-dev
    command: sh -c "celery -A tasks.celery_app:celery flower"
    depends_on:
      - redis
    ports:
      - 5555:5555

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  postgres_data:
  grafana_data:
  prometheus_data:
